{:rename-macros {}, :renames {}, :use-macros {capitalize clojure.string, replace clojure.string, split clojure.string}, :excludes #{replace}, :name kioo.util, :imports nil, :requires {clojure.string clojure.string, cljsjs.react cljsjs.react}, :uses {capitalize clojure.string, replace clojure.string, split clojure.string}, :defs {*component* {:name kioo.util/*component*, :file "public/js/compiled/out/kioo/util.cljs", :line 7, :column 1, :end-line 7, :end-column 27, :dynamic true, :meta {:file "/home/pavel/code/clojure/reagent-components-playgroud/public/js/compiled/out/kioo/util.cljs", :line 7, :column 16, :end-line 7, :end-column 27, :dynamic true}}, transform-keys {:protocol-inline nil, :meta {:file "/home/pavel/code/clojure/reagent-components-playgroud/public/js/compiled/out/kioo/util.cljs", :line 115, :column 7, :end-line 115, :end-column 21, :arglists (quote ([attrs]))}, :name kioo.util/transform-keys, :variadic false, :file "public/js/compiled/out/kioo/util.cljs", :end-column 21, :method-params ([attrs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 115, :end-line 115, :max-fixed-arity 1, :fn-var true, :arglists (quote ([attrs]))}, dont-camel-case {:name kioo.util/dont-camel-case, :file "public/js/compiled/out/kioo/util.cljs", :line 88, :column 1, :end-line 88, :end-column 21, :meta {:file "/home/pavel/code/clojure/reagent-components-playgroud/public/js/compiled/out/kioo/util.cljs", :line 88, :column 6, :end-line 88, :end-column 21}}, convert-attrs {:protocol-inline nil, :meta {:file "/home/pavel/code/clojure/reagent-components-playgroud/public/js/compiled/out/kioo/util.cljs", :line 119, :column 7, :end-line 119, :end-column 20, :arglists (quote ([attrs]))}, :name kioo.util/convert-attrs, :variadic false, :file "public/js/compiled/out/kioo/util.cljs", :end-column 20, :method-params ([attrs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 119, :end-line 119, :max-fixed-arity 1, :fn-var true, :arglists (quote ([attrs]))}, strip-attr {:protocol-inline nil, :meta {:file "/home/pavel/code/clojure/reagent-components-playgroud/public/js/compiled/out/kioo/util.cljs", :line 149, :column 7, :end-line 149, :end-column 17, :arglists (quote ([s attr])), :doc "Strip the HTML attribute `attr` and it's value from the string `s`."}, :name kioo.util/strip-attr, :variadic false, :file "public/js/compiled/out/kioo/util.cljs", :end-column 17, :method-params ([s attr]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 149, :end-line 149, :max-fixed-arity 2, :fn-var true, :arglists (quote ([s attr])), :doc "Strip the HTML attribute `attr` and it's value from the string `s`."}, flatten-nodes {:protocol-inline nil, :meta {:file "/home/pavel/code/clojure/reagent-components-playgroud/public/js/compiled/out/kioo/util.cljs", :line 132, :column 7, :end-line 132, :end-column 20, :arglists (quote ([nodes]))}, :name kioo.util/flatten-nodes, :variadic false, :file "public/js/compiled/out/kioo/util.cljs", :end-column 20, :method-params ([nodes]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 132, :end-line 132, :max-fixed-arity 1, :fn-var true, :arglists (quote ([nodes]))}, WrapComponent {:name kioo.util/WrapComponent, :file "public/js/compiled/out/kioo/util.cljs", :line 11, :column 1, :end-line 11, :end-column 19, :meta {:file "/home/pavel/code/clojure/reagent-components-playgroud/public/js/compiled/out/kioo/util.cljs", :line 11, :column 6, :end-line 11, :end-column 19}, :doc "Wrapper component used to mix-in lifecycle methods\n   This was modified from a similar setup in quiescent"}, attr-pattern {:protocol-inline nil, :meta {:file "/home/pavel/code/clojure/reagent-components-playgroud/public/js/compiled/out/kioo/util.cljs", :line 143, :column 7, :end-line 143, :end-column 19, :arglists (quote ([attr])), :doc "Returns a regular expression that matches the HTML attribute `attr`\n  and it's value."}, :name kioo.util/attr-pattern, :variadic false, :file "public/js/compiled/out/kioo/util.cljs", :end-column 19, :method-params ([attr]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 143, :end-line 143, :max-fixed-arity 1, :fn-var true, :arglists (quote ([attr])), :doc "Returns a regular expression that matches the HTML attribute `attr`\n  and it's value."}, attribute-map {:name kioo.util/attribute-map, :file "public/js/compiled/out/kioo/util.cljs", :line 100, :column 1, :end-line 100, :end-column 19, :meta {:file "/home/pavel/code/clojure/reagent-components-playgroud/public/js/compiled/out/kioo/util.cljs", :line 100, :column 6, :end-line 100, :end-column 19}}, camel-case {:protocol-inline nil, :meta {:file "/home/pavel/code/clojure/reagent-components-playgroud/public/js/compiled/out/kioo/util.cljs", :line 90, :column 7, :end-line 90, :end-column 17, :arglists (quote ([dashed]))}, :name kioo.util/camel-case, :variadic false, :file "public/js/compiled/out/kioo/util.cljs", :end-column 17, :method-params ([dashed]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 90, :end-line 90, :max-fixed-arity 1, :fn-var true, :arglists (quote ([dashed]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:gradientUnits :stopOpacity :httpEquiv :rowSpan :frameBorder :noValidate :tabIndex :itemProp :autoFocus :formEncType :spreadMethod :autoComplete :radioGroup :textAnchor :cellSpacing :className :style :dateTime :allowFullScreen :for :colSpan :allowTransparency :readOnly :acceptCharset :strokeWidth :accept-charset :class :accessKey :spellCheck :autoPlay :maxLength :contentEditable :itemType :htmlFor :encType :cellPadding :scrollLeft :stopColor :contextMenu :itemScope :viewBox :strokeLinecap :formNoValidate :charSet :srcDoc :gradientTransform :scrollTop}, :order [:accessKey :allowFullScreen :allowTransparency :autoComplete :autoFocus :autoPlay :cellPadding :cellSpacing :charSet :colSpan :contentEditable :contextMenu :dateTime :encType :formEncType :formNoValidate :frameBorder :httpEquiv :itemProp :itemScope :itemType :maxLength :noValidate :radioGroup :readOnly :rowSpan :scrollLeft :scrollTop :spellCheck :srcDoc :tabIndex :gradientTransform :gradientUnits :spreadMethod :stopColor :stopOpacity :strokeLinecap :strokeWidth :textAnchor :viewBox :accept-charset :acceptCharset :class :className :for :htmlFor :style]}, :doc nil}